# Specific settings for this marker.

[general]
run_id = 1

[marker]
markertype = LANDCOVER_EARLY

# strategy to balance the training dataset for the marker.
balancing_strategy = BALANCING_STRATEGY_PROPORTIONAL_GROUPS

# start date of timeseries data to use
# remarks: nearest monday will be used + year will be replace in run-time
start_date_str = ${year}-03-15
# end date of timeseries data to use
# remarks: end date is NOT inclusive + year will be replace in run-time
end_date_str = ${year}-06-15

# negative buffer to apply to input parcels
buffer = 5
# minimum number of pixels that should be inside the buffered input parcels
min_nb_pixels = 0

# add classes that should be ignored for training, but have to get a prediction
classes_to_ignore_for_train = ${classes_to_ignore_for_train_default}, MON_LC_UNKNOWN
# add some ignores in addition to the default ones
classes_to_ignore = ${classes_to_ignore_default}, MON_LC_IGNORE_DIFFICULT_PERMANENT_CLASS, MON_LC_IGNORE_DIFFICULT_PERMANENT_CLASS_NS, MON_LC_INELIGIBLE, MON_LC_FRUIT

[columns]
# Column name of the class to use for balancing the training dataset
class_balancing = GWSCOD_H

[classifier]
# The classifier type to use. Currently supported types: 
#     * multilayer_perceptron
#     * nearestneighbor
#     * randomforest
#     * svm
classifier_type = nearestneighbor

[postprocess]
# Doubt: if highest probability < 2*second probability  
doubt_proba1_st_2_x_proba2 = False
# Doubt: if prediction == input class and highest probability < thresshold  
doubt_pred_eq_input_proba1_st_thresshold = 0
# Doubt: if prediction != input class and highest probability < thresshold  
doubt_pred_ne_input_proba1_st_thresshold = 0.96
